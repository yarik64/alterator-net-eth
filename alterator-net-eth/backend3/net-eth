#!/bin/sh

cachedir="/var/cache/alterator/net-eth"
po_domain="alterator-net-eth"

. alterator-sh-functions
. shell-config

PATH="/usr/lib/alterator-net-common:$PATH"

### cache
init_cache()
{
    local ifacedir="/etc/net/ifaces/$1"

    if [ ! -d "$cachedir/$1" ] ;then
	[ -d "$ifacedir" ] && cp -a "$ifacedir" "$cachedir"
	mkdir -p "$cachedir/$1"
    fi

    [ -f "$cachedir/iftab" ] || cp /etc/iftab "$cachedir/iftab"
}

clear_cache()
{
    rm -rf "$cachedir"
    mkdir "$cachedir"
}

commit_cache()
{
    [ -f "$cachedir/iftab" ] && mv -f "$cachedir/iftab" /etc/iftab
    find $cachedir -maxdepth 1 -mindepth 1 -type d|
	while read iface; do
	    [ -n "$iface" ] || exit
	    rm -rf "/etc/net/ifaces/${iface##*/}"
	    mv -f "$iface" "/etc/net/ifaces/${iface##*/}"
	done
    clear_cache
}

### interface work

list_mask()
{
    for i in `seq 32 -1 0`; do 
        printf '("%s" label "/%s (%s)")' "$i" "$i" "$(maskname "$i")"
    done
}

list_iface()
{
    iflist|
        while read iface mac; do
    	    local v="$(ifaceinfo "$iface")"
	    [ -z "$v" ] || v="($v)"
            printf '("%s" label "%s")' "$iface" "$iface"
        done
}

list_hw_binding()
{
    printf '("missing" label "%s")' "`_ "missing"`"
    printf '("mac" label "%s")' "`_ "by MAC address"`"
    printf '("businfo" label "%s")' "`_ "by bus location"`"
}

list_configuration()
{
    printf '("off" label "%s")' "`_ "Turned off"`"
    printf '("dhcp" label "%s")' "`_ "Use DHCP"`"
    printf '("static" label "%s")' "`_ "Manually"`"
}

read_hw_binding()
{
    local config=

    if [ -f "$cachedir/iftab" ];then
	config="$cachedir/iftab"
    else
	config="/etc/iftab"
    fi

    local line="$(grep "^[[:space:]]*$1[[:space:]]" "$config")"

    if [ -z "$line" ]; then
	echo "missing"
    else
	if echo "$line" | fgrep -qsw mac; then
	    echo "mac"
	elif echo "$line" | fgrep -qsw businfo; then
	    echo "businfo"
	else
	    echo "missing"
	fi
    fi
}

read_info()
{
	local info=
	ifcheckup "$name" && info="`_ "interface is up"`" || info="`_ "interface is down"`"
	
	if ! ifcheckwireless "$name"; then
	    ifcheckplug "$name"
	    case "$?" in
		2) info="$info, `_ "plugged"`"   ;;
		3) info="$info, `_ "unplugged"`" ;;
	    esac
	fi
	echo "$info"
}

read_configuration()
{
    local disabled="$(shell_config_get "$1/options" DISABLED)"
    local bootproto="$(shell_config_get "$1/options" BOOTPROTO)"

    if [ "$(write_bool "$disabled")" = "#t" ];then
        echo 'off'
    elif [ "$bootproto" = "static" ];then
	echo 'static'
    else #dhcp by default
	echo 'dhcp'
    fi
}

read_iface()
{
	local name="$1"; shift
	local ifacedir=

	if [ -d "$cachedir/$name" ];then
	    ifacedir="$cachedir/$name"
	else
	    ifacedir="/etc/net/ifaces/$name"
	fi

	#collect general information

	printf 'info "%s" ' "$(read_info)"
	printf 'wireless %s ' "$(ifcheckwireless "$name" && echo "#t" || echo "#f")"
	printf 'hw_binding "%s" ' "$(read_hw_binding "$name")"
	printf 'configuration "%s"' "$(read_configuration "$ifacedir")"

	local addr= ip= mask=
	[ ! -s "/$ifacedir/ipv4address" ] ||
		addr=$(grep '^[0-9]' "$ifacedir/ipv4address" | head -n1 || echo "")

	if [ -n "$addr" ]; then
		ip="${addr%%/*}"
		mask="${addr#$ip}"; mask="${mask#/}"
	fi

	printf 'ip "%s"' "$ip"
	printf 'mask "%s"' "${mask:-24}"

	[ ! -s "/$ifacedir/ipv4route" ] ||
		printf 'default "%s"\n' \
			$(grep '^default' "$ifacedir/ipv4route" | sed -r 's,default[[:space:]]+via[[:space:]],,' || echo "")
}


write_hw_binding()
{
    local name="$1";shift
    local value="$1";shift
    local config="$cachedir/iftab"

    local mac="$(ifread "$name"|cut -f1)"
    local businfo="$(ifread "$name"|cut -f2)"

    if [ -s "$config" ]; then
	sed -r \
	    -e "/^$name[[:space:]]/ d" \
	    -i "$config"

	[ -z "$mac" ] ||
	[ "$mac" = "00:00:00:00:00:00" ] ||
	    sed -r \
		-e "/[[:space:]]mac[[:space:]]+$mac([[:space:]]|\$)/ d" \
	        -i "$config"

	[ -z "$businfo" ] ||
	    sed -r \
		-e "/[[:space:]]businfo[[:space:]]+$businfo([[:space:]]|\$)/ d" \
	    	-i "$config"
    fi

    case "$value" in
	none) ;;
	mac)
	    [ -z "$mac" ] ||
	    [ "$mac" = "00:00:00:00:00:00" ] ||
	    printf "%s\tmac %s\n" "$name" "$mac" >>"$config"
	    ;;
	businfo)
	    [ -z "$businfo" ] ||
	    printf "%s\tbusinfo %s\n" "$name" "$businfo" >>"$config"
	    ;;
    esac
}

write_iface()
{
	local name="$1" && shift
	local ifacedir="$cachedir/$name"

	init_cache "$name"
	
	[ -n "$in_mask" ] && [ -n "$in_ip" ] && \
		printf '%s/%s\n' "$in_ip" "$in_mask" >"/$ifacedir/ipv4address"

	[ -n "$in_default" ] && [ -s "/$ifacedir/ipv4address" ] && \
		printf 'default via %s\n' "$in_default" >"/$ifacedir/ipv4route"

	shell_config_set "$ifacedir/options" TYPE eth

	case "$in_configuration" in
	    off)
		shell_config_set "$ifacedir/options" DISABLED yes
		;;
	    static)
		shell_config_set "$ifacedir/options" DISABLED no
		shell_config_set "$ifacedir/options" BOOTPROTO static
		;;
	    dhcp)
		shell_config_set "$ifacedir/options" DISABLED no
		shell_config_set "$ifacedir/options" BOOTPROTO dhcp
		;;
	esac

	[ -n "$in_hw_binding" ] &&
	    write_hw_binding "$name" "$in_hw_binding"
}

commit_iface()
{
    commit_cache
    iflist|
        while read iface rest; do
    		ifdown "$iface" && ifup "$iface"
        done >&2
}

reset_iface()
{
    clear_cache
}

#initial actions
ifup lo
clear_cache

on_message()
{
	case "$in_action" in
		constraints)
			echo '('
			if [ "$in__objects" != "/" ];then
    			    printf 'info (label "%s")' "`_ "Interface state"`"
			    printf 'dhcp (exclude (#t ip) exclude (#t default) exclude (#t mask) default #f label "%s")' \
				    "`_ "Use DHCP"`"
			    printf 'ip (required #t ipv4-address #t label "%s")' \
				    "`_ "IP address"`"
			    printf 'default (ipv4-address #t label "%s")' \
				    "`_ "Default gateway"`"
			    printf 'mask (label "%s")' \
				    "`_ "NetMask"`"
			    printf 'hw_binding (label "%s")' \
				    "`_ "Hardware binding"`"
			fi
			echo ')'
			;;
		list)
			echo '('
			case "${in__objects##*/}" in
			    avail_masks) list_mask ;;
			    avail_hw_bindings) list_hw_binding ;;
			    avail_configurations) list_configuration ;;
			    *) list_iface;;
			esac
			echo ')'
			;;
		read) 
			echo "("
			local name="${in_ifname}"
			[ -n "$name" ] || name="$(iflist|cut -f1 -d' '|head -n1)"

			printf 'name "%s"' "$name"
			read_iface "$name"
			echo ")"
			;;
		write)
			local name="${in_ifname}"
			[ -n "$name" ] || name="$(iflist|cut -f1 -d' '|head -n1)"

			write_iface "$name"
			[ -n "$in_commit" ] && commit_iface
			[ -n "$in_reset" ] && reset_iface
			write_nop
			;;
		*)
			echo '#f'
			;;
	esac
}

message_loop
